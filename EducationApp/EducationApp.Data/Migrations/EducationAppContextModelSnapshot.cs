// <auto-generated />
using System;
using EducationApp.Data.Concrete.EFCore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationApp.Data.Migrations
{
    [DbContext(typeof(EducationAppContext))]
    partial class EducationAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("EducationApp.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(5769),
                            Description = "Bilim Kurgu Kitapları",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(5788),
                            Name = "Bilim Kurgu",
                            Url = "bilim-kurgu"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(5793),
                            Description = "Türkiye Tarihi Kitapları",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(5794),
                            Name = "Türkiye Tarihi",
                            Url = "turkiye-tarihi"
                        });
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("BirthOfYear")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "İlber Ortaylı, Türk tarihçi, akademisyen ve yazar. Türk Tarih Kurumu Şeref Üyesidir. Ortaylı, Uluslararası Osmanlı Etütleri Komitesi yönetim kurulu üyesi ve Avrupa İranoloji Cemiyeti ve Avusturya-Türk Bilimler Forumu üyesidir.",
                            BirthOfYear = 1950,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(9016),
                            FirstName = "İlber",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Ortaylı",
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(9018),
                            PhotoUrl = "ilber-ortayli.jpg",
                            Url = "ilber-ortayli-1"
                        },
                        new
                        {
                            Id = 2,
                            About = "Afşin Kum Kimdir? Afşin Kum, 1972 İzmir doğumlu. Boğaziçi Üniversitesinde bilgisayar mühendisliği, Bilgi Üniversitesinde sinema-televizyon öğrenimi gördü. 1997'den bu yana çeşitli kurumlarda yazılımcı ve yönetici olarak çalıştı.",
                            BirthOfYear = 1960,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(9024),
                            FirstName = "Afşin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kum",
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 154, DateTimeKind.Local).AddTicks(9025),
                            PhotoUrl = "afsin-kum.jpg",
                            Url = "afsin-kum-15"
                        });
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3149),
                            Description = "test.",
                            ImageUrl = "ogrenci-kiz.jpg",
                            InstructorId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3153),
                            Name = "Öğrenci Kız",
                            Price = 100m,
                            Time = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3162),
                            Url = "ogrenci-kiz-1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3167),
                            Description = "testtt.",
                            ImageUrl = "sicak-kafa.jpg",
                            InstructorId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3167),
                            Name = "Sıcak Kafa",
                            Price = 100m,
                            Time = new DateTime(2023, 7, 6, 14, 31, 17, 155, DateTimeKind.Local).AddTicks(3170),
                            Url = "sicak-kafa-20"
                        });
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.ProductInstructor", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("ProductInstructors");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            InstructorId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            InstructorId = 2
                        });
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.Product", b =>
                {
                    b.HasOne("EducationApp.Entity.Concrete.Instructor", "Instructor")
                        .WithMany("Products")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.ProductInstructor", b =>
                {
                    b.HasOne("EducationApp.Entity.Concrete.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationApp.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EducationApp.Entity.Concrete.Instructor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
